name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: crm_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'crm-backend/package-lock.json'
    
    - name: Install Backend Dependencies
      working-directory: ./crm-backend
      run: npm ci
    
    - name: Generate Prisma Client
      working-directory: ./crm-backend
      run: npx prisma generate
    
    - name: Create Test Environment File
      working-directory: ./crm-backend
      run: |
        cp .env.example .env.test
        sed -i 's|DATABASE_URL=.*|DATABASE_URL=postgresql://postgres:postgres@localhost:5432/crm_test|g' .env.test
    
    - name: Run Migrations
      working-directory: ./crm-backend
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crm_test
    
    - name: Run Backend Tests
      working-directory: ./crm-backend
      run: npm test
      env:
        NODE_ENV: test
        JWT_SECRET: test_secret
        JWT_EXPIRES_IN: 1h
        REFRESH_TOKEN_SECRET: refresh_test_secret
        REFRESH_TOKEN_EXPIRES_IN: 7d
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/crm_test

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'crm-frontend/package-lock.json'
    
    - name: Install Frontend Dependencies
      working-directory: ./crm-frontend
      run: npm ci
    
    - name: Run Frontend Linting
      working-directory: ./crm-frontend
      run: npm run lint
    
    - name: Run Frontend Type Checking
      working-directory: ./crm-frontend
      run: npm run typecheck
    
    - name: Build Frontend
      working-directory: ./crm-frontend
      run: npm run build
      env:
        VITE_API_URL: http://localhost:5000/api 